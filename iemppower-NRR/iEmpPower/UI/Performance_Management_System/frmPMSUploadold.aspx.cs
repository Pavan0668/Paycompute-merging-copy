using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.IO;
using iEmpPower.Old_App_Code.iEmpPowerDAL.Performance_Management_System; 

public partial class UI_Performance_Management_System_frmPMSUpload : System.Web.UI.Page
{
    string empid = string.Empty;
    string empname = string.Empty;
    protected void Page_Load(object sender, EventArgs e)
    {        
        lblMessageBoard.Text = "";
        if (!IsPostBack)
        {

        }
    }

    protected void btnUploadSelf_Click(object sender, EventArgs e)
    {
        try
        {
            string strFilePath=string.Empty;//// = Server.MapPath("~/UI/Performance_Management_System/Exported/Approval-Templates/");

          //  string filename = Server.MapPath(FileUploadSelf.FileName);

            string strFileNameWithPath = FileUploadSelf.FileName;

            string filename = Path.GetFileName(strFileNameWithPath);

          //string file = System.IO.Path.GetFullPath(FileUploadSelf.FileName);
       
                    if (filename == "" || filename == "undefined")
                    {
                        lblMessageBoard.Text = "Please select file.";
                        return;
                    }

                    if (!File.Exists(filename))
                    {
                      
                            strFilePath = Server.MapPath("~/UI/Performance_Management_System/Exported/Templates/upload/");
                       
                        
                        FileUploadSelf.SaveAs(strFilePath + filename);
                        lblMessageBoard.Text = "File uploaded successfully!";
                        PMSbl objBl = new PMSbl();
                        //update status
                        int iR = objBl.Update_Status_Appraisal_Templates(filename, 3, 1); // Initially was 2,2


                        SendMailMethodEmp();
                    }
            
        }
        catch (Exception ex)
        {
            lblMessageBoard.Text = "Unknown error occurred( " + ex.Message + " )";
            lblMessageBoard.ForeColor = System.Drawing.Color.Red;
            return;
        }
    }
    
    private void SendMailMethodEmp()
    {
        try
        {
            string RecipientsString = string.Empty;
            string strPernr_Mail = string.Empty;

            string Pernr = "";
            string PernrEmail = "";
            string SuperVisorPernr = "";
            string SuperVisorEmail = "";
            string SuperVisorPhn = "";
            string HRPernr = "";
            string HRPhn = "";
            string HREmail = "";


            PMSDataContext objo = new PMSDataContext();
            objo.sp_Get_MailList_PMS(User.Identity.Name, ref HRPernr, ref HREmail, ref HRPhn, ref SuperVisorPernr, ref SuperVisorPhn, ref SuperVisorEmail,
                                           ref Pernr, ref PernrEmail);

            RecipientsString = SuperVisorEmail;//// +"," + HREmail;
            strPernr_Mail = PernrEmail;

            //Preparing the mail body--------------------------------------------------

            string strBody = string.Empty;

            string strEmpName = Session["EmployeeName"].ToString();


            strBody = "PMS Template file has been uploaded by employee: " + strEmpName + " | " + User.Identity.Name.ToString() + ".\n\n";
            strBody = strBody + "This is an autogenerated e-mail, hence do not reply.";
            string strSubject = string.Empty;

            if (strEmpName != null && strEmpName.Length > 0 && strEmpName != "")
            {
                strSubject = "Performance Appraisal Template file has been uploaded by employee: " + strEmpName;
            }
            else
            {
                strSubject = "Performance Appraisal";
            }
            if (RecipientsString.Length > 0 && strPernr_Mail.Length > 0)
            {
                iEmpPowerMaster_Load.masterbl.DispatchMail(RecipientsString, User.Identity.Name, strSubject, strPernr_Mail, strBody);
            }


        }
        catch
        {
            lblMessageBoard.ForeColor = System.Drawing.Color.Red;
            lblMessageBoard.Text = "Unknown error occured. Please contact your system administrator.";
            return;
        }
    }

    protected void btnUploadEmp_Click(object sender, EventArgs e)
    {
        try
        {
            ////string strFilePath1 = Server.MapPath("~/UI/Performance_Management_System/Exported/Final-Templates/");
            string strFilePath=string.Empty;//// = Server.MapPath("~/UI/Performance_Management_System/Exported/Approval-Templates/");
            string filename = Path.GetFileName(FileUploadEmp.FileName);

            if (filename == "" || filename == "undefined")
            {
                lblMessageBoard.Text = "Please select file.";
                return;
            }
            if (!File.Exists(filename))
            {
              
                     strFilePath = Server.MapPath("~/UI/Performance_Management_System/Exported/Approval-Templates/upload/");
              

                PMSDataContext objDataContext = new PMSDataContext();
                PMScollectionbo objList = new PMScollectionbo();
                foreach (var vRow in objDataContext.sp_Get_PARTID(filename))
                {
                    PMSbo objBo = new PMSbo();
                    //string PART_ID1 = vRow.PART_ID1.ToString();
                    //string PART_ID2 = vRow.PART_ID2.ToString();
                    //string PART_ID3 = vRow.PART_ID3.ToString();
                    //string PART_ID4 = vRow.PART_ID4.ToString();
                    //string PART_ID5 = vRow.PART_ID5.ToString();
                    //string PART_ID6 = vRow.PART_ID6.ToString();
                    //string PART_ID7 = vRow.PART_ID7.ToString();
                    empid = vRow.APPRAISEE_ID.ToString();
                    empname = vRow.APPRAISEE_NAME.ToString();


                    //Manager
                    if (vRow.STATUS == 3 && vRow.SUBSTAT == 1)
                    {
                        FileUploadEmp.SaveAs(strFilePath + filename);
                        lblMessageBoard.Text = "File uploaded successfully!";
                        lblMessageBoard.ForeColor = System.Drawing.Color.Green;
                        PMSbl objBl = new PMSbl();
                        //update status
                        int iR = objBl.Update_Status_Appraisal_Templates(filename, 4, 2);
                        SendMailMethodMgr();
                    }
                }

            }
            //////Manager
            ////if (vRow.STATUS == 2 && vRow.SUBSTAT == 2)
            ////{
            ////    if (!String.IsNullOrEmpty(PART_ID1))//PART_ID1 != null || PART_ID1 != " " || PART_ID1!=string.Empty) 
            ////    {
            ////        FileUploadEmp.SaveAs(strFilePath + filename);
            ////        lblMessageBoard.Text = "File uploaded successfully!";
            ////        PMSbl objBl = new PMSbl();
            ////        //update status
            ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 4, 2);
            ////    }

            ////    else
            ////    {
            ////        FileUploadEmp.SaveAs(strFilePath1 + filename);
            ////        lblMessageBoard.Text = "File uploaded successfully!";
            ////        lblMessageBoard.ForeColor = System.Drawing.Color.Green;
            ////        PMSbl objBl = new PMSbl();
            ////        //update status
            ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 4, 2);
            ////        SendMailMethodMgr();
            ////    }
            ////}
           

        ////    //PARTID1
        ////    else if (vRow.STATUS == 4 && vRow.SUBSTAT == 2)
        ////    {
        ////        if (!String.IsNullOrEmpty(PART_ID2))//PART_ID2 != null || PART_ID2 != " " || PART_ID2 != string.Empty)
        ////        {
        ////        FileUploadEmp.SaveAs(strFilePath + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        lblMessageBoard.ForeColor = System.Drawing.Color.Green;
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 6, 2);
        ////       }
        ////      else
        ////      {
        ////        FileUploadEmp.SaveAs(strFilePath1 + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 6, 2);
        ////        SendMailMethodMgr();
        ////      }   
        ////    }
        ////    //PARTID2
        ////    else if (vRow.STATUS == 6 && vRow.SUBSTAT == 2)
        ////    {
        ////        if (!String.IsNullOrEmpty(PART_ID3))//PART_ID3 != null || PART_ID3 != " " || PART_ID3 != string.Empty)
        ////        {
        ////        FileUploadEmp.SaveAs(strFilePath + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 8, 2);
        ////       }
        ////       else
        ////       {
        ////        FileUploadEmp.SaveAs(strFilePath1 + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 8, 2);
        ////        SendMailMethodMgr();
        ////       }
        ////    }

        ////    //PARTID3
        ////    else if (vRow.STATUS == 8 && vRow.SUBSTAT == 2)
        ////    {
        ////        if (!String.IsNullOrEmpty(PART_ID4))//PART_ID4 != null || PART_ID4 != " " || PART_ID4 != string.Empty)
        ////        {
        ////        FileUploadEmp.SaveAs(strFilePath + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 10, 2);
        ////    }
        ////    else
        ////    {
        ////        FileUploadEmp.SaveAs(strFilePath1 + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 10, 2);
        ////        SendMailMethodMgr();
        ////    }
        ////    }

        ////    //PARTID4
        ////    else if (vRow.STATUS == 10 && vRow.SUBSTAT == 2)
        ////    {
        ////        if (!String.IsNullOrEmpty(PART_ID5))//PART_ID5 != null || PART_ID5 != " " || PART_ID5 != string.Empty)
        ////        {
        ////        FileUploadEmp.SaveAs(strFilePath + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 12, 2);
        ////    }
        ////    else
        ////    {
        ////        FileUploadEmp.SaveAs(strFilePath1 + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 12, 2);
        ////        SendMailMethodMgr();
        ////    }
        ////    }

        ////    //PARTID5
        ////    else if (vRow.STATUS == 12 && vRow.SUBSTAT == 2)
        ////    {
        ////        if (!String.IsNullOrEmpty(PART_ID6))//PART_ID6 != null || PART_ID6 != " " || PART_ID6 != string.Empty)
        ////        {
        ////        FileUploadEmp.SaveAs(strFilePath + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 14, 2);
        ////    }
        ////    else
        ////    {
        ////        FileUploadEmp.SaveAs(strFilePath1 + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 14, 2);
        ////        SendMailMethodMgr();
        ////    }
        ////}

        ////    //PARTID6
        ////    else if (vRow.STATUS == 14 && vRow.SUBSTAT == 2)
        ////    {
        ////        if (!String.IsNullOrEmpty(PART_ID7))//PART_ID7 != null || PART_ID7 != " " || PART_ID7 != string.Empty)
        ////        {
        ////            FileUploadEmp.SaveAs(strFilePath + filename);
        ////            lblMessageBoard.Text = "File uploaded successfully!";
        ////            PMSbl objBl = new PMSbl();
        ////            //update status
        ////            int iR = objBl.Update_Status_Appraisal_Templates(filename, 16, 2);
        ////        }
        ////        else
        ////        {
        ////            FileUploadEmp.SaveAs(strFilePath1 + filename);
        ////            lblMessageBoard.Text = "File uploaded successfully!";
        ////            PMSbl objBl = new PMSbl();
        ////            //update status
        ////            int iR = objBl.Update_Status_Appraisal_Templates(filename, 16, 2);
        ////            SendMailMethodMgr();
        ////        }
        ////    }

        ////    //PARTID7
        ////    else if (vRow.STATUS == 16 && vRow.SUBSTAT == 2)
        ////    {
        ////        FileUploadEmp.SaveAs(strFilePath1 + filename);
        ////        lblMessageBoard.Text = "File uploaded successfully!";
        ////        PMSbl objBl = new PMSbl();
        ////        //update status
        ////        int iR = objBl.Update_Status_Appraisal_Templates(filename, 18, 2);
        ////        SendMailMethodMgr();
        ////    } 
        ////}

            ////if (!File.Exists(filename))
            ////{

                ////FileUploadEmp.SaveAs(strFilePath + filename);
                ////lblMessageBoard.Text = "File uploaded successfully!";
                ////PMSbl objBl = new PMSbl();
                //////update status
                ////int iR = objBl.Update_Status_Appraisal_Templates(filename, 4, 2);
            ////} 

            //if (FileUploadEmp.HasFiles)
            //{
            //    foreach (var file in FileUploadEmp.PostedFiles)
            //    {
            //        //upload logic
            //        Response.Write(file.FileName + " - " + file.ContentLength + " Bytes. <br />");
            //        string filename = file.FileName;

            //           if (!File.Exists(filename))
            //            {
            //                FileUploadEmp.SaveAs(strFilePath + filename);
            //                lblMessageBoard.Text = "File uploaded successfully!";
            //                PMSbl objBl = new PMSbl();
            //                //update status
            //                int iR = objBl.Update_Status_Appraisal_Templates(filename, 4, 2);
            //            }
            //    }
            //}         
        
        }
        catch (Exception ex)
        {
            lblMessageBoard.Text = "Unknown error occurred( " + ex.Message + " )";
            lblMessageBoard.ForeColor = System.Drawing.Color.Red;
            return;
        }
    }

    private void SendMailMethodMgr()
    {
        try
        {
            string RecipientsString = string.Empty;
            string strPernr_Mail = string.Empty;

            string Pernr = "";
            string PernrEmail = "";
            string SuperVisorPernr = "";
            string SuperVisorEmail = "";
            string SuperVisorPhn = "";
            string HRPernr = "";
            string HRPhn = "";
            string HREmail = "";
            string empemail = "";



            PMSDataContext objo = new PMSDataContext();
            objo.sp_Get_MailList_PMS(User.Identity.Name, ref HRPernr, ref HREmail, ref HRPhn, ref SuperVisorPernr, ref SuperVisorPhn, ref SuperVisorEmail,
                                           ref Pernr, ref PernrEmail);


            empemail = getEmail(empid);

            RecipientsString = empemail;//// +"," + HREmail;
            strPernr_Mail = PernrEmail;

            //Preparing the mail body--------------------------------------------------

            string strBody = string.Empty;

            string strEmpName = Session["EmployeeName"].ToString();


            strBody = "PMS Template file has been uploaded by Manager: " + strEmpName + " | " + User.Identity.Name.ToString() + "and completed the appraisal.\n\n";
            strBody = strBody + "This is an autogenerated e-mail, hence do not reply.";
            string strSubject = string.Empty;

            if (strEmpName != null && strEmpName.Length > 0 && strEmpName != "")
            {
                strSubject = "Performance Appraisal Template file has been uploaded by Manager: " + strEmpName + "(" + Pernr + ")" + " of Employee:" + empname + "(" + empid + ")";
            }
            else
            {
                strSubject = "Performance Appraisal";
            }
            if (RecipientsString.Length > 0 && strPernr_Mail.Length > 0)
            {
                iEmpPowerMaster_Load.masterbl.DispatchMail(RecipientsString, User.Identity.Name, strSubject, strPernr_Mail, strBody);
            }


        }
        catch
        {
            lblMessageBoard.ForeColor = System.Drawing.Color.Red;
            lblMessageBoard.Text = "Unknown error occured. Please contact your system administrator.";
            return;
        }
    }

    public string getEmail(string strPERNR)
    {
        string strEmail = string.Empty;

        PMSDataContext objo = new PMSDataContext();
        foreach (var vRow in objo.sp_get_Person_Emailid(strPERNR))
        {
            strEmail = Convert.ToString(vRow.USRID.ToString());
        }
        objo.Dispose();

        return strEmail;

    }
}